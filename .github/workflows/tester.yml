# working dir : D:\a\chef-powershell-shim\chef-powershell-shim
name: Manually triggered workflow
on:
  workflow_dispatch:

jobs:
  Build-And-Push-Chef-PowerShell-Gem:
    if: github.event_name == 'workflow_dispatch'
    runs-on: windows-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Update the Gem version
        run: |
          $project_root = $pwd
          $update_type = $null
          try {
              $file = (Get-Content $("$project_root\chef-powershell\lib\chef-powershell\version.rb"))
          }
          catch {
              Write-Error "Failed to Get the Version from version.rb"
          }
          [version]$Version = [regex]::matches($file, "\s*VERSION\s=\s\`"(\d*.\d*.\d*)\`"\s*").groups[1].value
          $update_type = [System.Environment]::GetEnvironmentVariable("CHEF_POWERSHELL_VERSION_UPDATE", "Machine")
          # Add one to the build of the version number
          if ($update_type -eq "Major") {
              [version]$NewVersion = "{0}.{1}.{2}" -f ($Version.Major + 1), $Version.Minor, $Version.Build
          }
          elseif ($update_type -eq "Minor") {
              [version]$NewVersion = "{0}.{1}.{2}" -f $Version.Major, ($Version.Minor + 1), $Version.Build
          }
          elseif (([string]::IsNullOrEmpty($update_type)) -or ($update_type -eq "Version")) {
              [version]$NewVersion = "{0}.{1}.{2}" -f $Version.Major, $Version.Minor, ($Version.Build + 1)
          }
          else {
              Write-Error "failed to update the version string"
          }
          # Replace Old Version Number with New Version number in the file
          try {
              (Get-Content .\chef-powershell\lib\chef-powershell\version.rb) -replace $version, $NewVersion | Out-File .\chef-powershell\lib\chef-powershell\version.rb -Encoding utf8
              Write-Output "Updated Module Version from $Version to $NewVersion"
          }
          catch {
              $_
              Write-Error "failed to set file"
          }
        shell: powershell
      - name: Commit changes to the Version file
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "Updating the version file in Main" -a
      - name: Push Updated Version file back to main
        uses: ad-m/github-push-action@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
